/* File generated with Shader Minifier 1.1.4
* http://www.ctrl-alt-test.fr
*/
#ifndef SHADER_CODE_H_
# define SHADER_CODE_H_

const char *fragment_glsl =
"uniform int Q;"
"uniform vec2 V;"
"float T=Q*.001;"
"const vec3 v=vec3(0.,.001,1.);"
"const float m=3.14159;"
"float f(float v)"
"{"
"return fract(sin(v)*43758.5);"
"}"
"float x(vec2 v)"
"{"
"return fract(sin(17.*f(v.r)+54.*f(v.g)));"
"}"
"float s(vec2 f)"
"{"
"vec2 m=floor(f);"
"f-=m;"
"return mix(mix(x(m),x(m+v.br),f.r),mix(x(m+v.rb),x(m+v.bb),f.r),f.g);"
"}"
"float n(float v)"
"{"
"float m=floor(v);"
"v-=m;"
"return mix(f(m),f(m+1.),v);"
"}"
"float f(vec3 v,vec3 r)"
"{"
"return v=abs(v)-r,max(v.r,max(v.g,v.b));"
"}"
"mat3 t(float v)"
"{"
"float f=sin(v),m=cos(v);"
"return mat3(m,0.,f,0.,1.,0,-f,0.,m);"
"}"
"float n(vec3 v,float m)"
"{"
"return length(v)-m;"
"}"
"vec3 s(vec3 v,vec3 f)"
"{"
"return mod(v,f)-f*.5;"
"}"
"float f(vec3 v,float f,float m,float r)"
"{"
"float i=length(v);"
"return max(abs(v.g)-r,max(i-m,f-i));"
"}"
"float r(vec2 v)"
"{"
"return max(v.r,v.g);"
"}"
"float e(vec3 v)"
"{"
"const float m=2.8;"
"const int i=5;"
"vec3 s=vec3(1.1,.9,1.9);"
"for(int r=0;r<i;++r)"
"{"
"v=v*t(.1+T*.3);"
"v=abs(v);"
"v.rg+=step(v.r,v.g)*(v.gr-v.rg);"
"v.rb+=step(v.r,v.b)*(v.br-v.rb);"
"v.gb+=step(v.g,v.b)*(v.bg-v.gb);"
"v=v*t(.7);"
"v.rg=v.rg*m-(m-1.)*s.rg;"
"v.b=m*v.b;"
"if(v.b>.5*s.b*(m-1.))"
"v.b-=s.b*(m-1.);"
"}"
"return f(v,vec3(1.))*pow(m,-float(i));"
"}"
"int I=0;\n"
"#define PICK(d,dn,mn)if(dn<d){d=dn;I=mn;}\n"
"float a(vec3 v)"
"{"
"float m=r(abs(v.rg)-vec2(2.,.1));"
"m=m+max(0.,.2*f(s(v,vec3(.15)),vec3(.01)));"
"v.r=abs(v.r)+.02;"
"float i=r(abs(v.rg-vec2(2.,1.))-vec2(.02)),n=max(abs(mod(v.b,.4)-.2)-.02,max(abs(v.g-.5)-.5,abs(v.r-2.)-.02));"
"return min(m,min(i,n));"
"}"
"float d(vec3 v)"
"{"
"return f(v-vec3(33.,1.6,0.),vec3(20.,1.5,1.96));"
"}\n"
"#define LN 5\n"
"vec3 c[LN],o[LN];"
"float K(vec3 v)"
"{"
"float m=100000.;"
"for(int r=0;r<LN;++r)"
"PICK(m,length(v-c[r])-.1,r+100);"
"float i=length(v.rb),r=atan(v.r,v.b),o=length(v),b=-min(d(vec3(abs(v.r),v.gb)),d(vec3(abs(v.b),v.gr))),g=max(-n(v,19.),f(s(v,vec3(2.)),vec3(.8))),x=-n(v,20.);"
"PICK(m,x,1);"
"PICK(m,g,2);"
"m=max(b,m);"
"float P=n(v,9.);"
"P=max(P,abs(abs(v.g)-3.)-.5);"
"P=min(P,f(s(v,vec3(11.8)),vec3(.1,100.,.1)));"
"P=max(P,-n(v,8.9));"
"float K=a(vec3(i-13.,v.g,r*10.));"
"K=min(K,max(15.-i,min(a(v.bgr),a(v))));"
"K=max(K,b);"
"PICK(m,P,3);"
"PICK(m,K,4);"
"if(T>44.)"
"{"
"if(o<8.)"
"{"
"float p=mix(.001,4.,smoothstep(44.,54.,T));"
"PICK(m,e(v/p)*p,5);"
"}"
"else"
" m=min(m,o+2.);"
"}"
"return m;"
"}"
"vec3 p(vec3 m)"
"{"
"float r=K(m);"
"return normalize(vec3(K(m+v.grr)-r,K(m+v.rgr)-r,K(m+v.rrg)-r));"
"}"
"void K(vec3 v,out vec3 m,out vec3 f,out vec3 r,out float P,out float n)"
"{"
"m=p(v);"
"f=vec3(0.,1.,1.);"
"r=vec3(0.);"
"P=0.;"
"n=.99;"
"if(I==1)"
"f=vec3(0.),r=vec3(1.),P=.5;"
"else"
" if(I==2)"
"{"
"float b=sin(T+dot(normalize(vec3(1.)),floor(v/2.)));"
"r=max(0.,b)*vec3(1.);"
"f=vec3(0.);"
"P=.2;"
"}"
"else"
" if(I==3)"
"f=vec3(0.),r=vec3(1.),P=.8;"
"else"
" if(I==4)"
"f=vec3(0.),r=vec3(.56,.57,.58),n=.8,P=.2+.6*pow(s(v.rb*4.+40.),4.);"
"else"
" if(I==5)"
"f=vec3(0.),r=vec3(1.),P=.9,n=0.;"
"else"
"{"
"for(int b=0;b<LN;++b)"
"if(I==100+b)"
"f=o[b],r=vec3(0.),P=0.,n=0.;"
"}"
"}"
"float K(float v,float f)"
"{"
"f*=f;"
"f*=f;"
"float r=v*v*(f-1.)+1.;"
"r=m*r*r;"
"return f/r;"
"}"
"float a(float v,float m)"
"{"
"return m+=1.,m*=m/8.,v/(v*(1.-m)+m);"
"}"
"vec3 K(vec3 v,vec3 m,float r)"
"{"
"float f=0.,P=1000.;"
"int i;"
"for(i=0;i<128;++i)"
"{"
"vec3 b=v+m*f;"
"float n=K(b);"
"f+=n;"
"P=min(P,n);"
"if(n<.002*f||f>r)"
"break;"
"}"
"return vec3(f,P,float(i));"
"}"
"vec3 K(vec3 v,vec3 f,vec3 i,float r,vec3 n,float b,float g)"
"{"
"vec3 P=vec3(0.);"
"for(int e=0;e<LN;++e)"
"{"
"vec3 d=c[e]-v;"
"float s=dot(d,d),x=sqrt(s);"
"d=normalize(d);"
"vec3 p=K(v+.02*d,d,x);"
"if(p.r+.2<x)"
"continue;"
"vec3 l=normalize(f+d),t=mix(vec3(.04),n,b);"
"float L=max(dot(l,f),0.),u=max(dot(i,f),0.),C=max(dot(i,d),0.),I=max(dot(i,l),0.);"
"vec3 z=t+(1.-t)*pow(1.-L,5.);"
"float h=a(u,g)*a(C,g);"
"vec3 N=K(I,g)*h*z/(4.*u*C+.001);"
"P+=((vec3(1.)-z)*(1.-b)*n/m+N)*C*o[e]/s;"
"}"
"vec3 s=vec3(.03)*n*r;"
"return s+P;"
"}"
"mat3 a(vec3 v,vec3 m,vec3 f)"
"{"
"vec3 r=normalize(v-m),i=normalize(cross(f,r));"
"f=cross(r,i);"
"return mat3(i,f,r);"
"}"
"void main()"
"{"
"vec2 m=gl_FragCoord.rg/V*2.-1.;"
"m.r*=V.r/V.g;"
"float f=11.;"
"c[0]=vec3(f,6.,f);"
"c[1]=vec3(f,6.,-f);"
"c[2]=vec3(-f,6.,-f);"
"c[3]=vec3(-f,6.,f);"
"c[4]=vec3(0.);"
"o[0]=30.*vec3(.7,.35,.45)*mix(1.,n(T*20.),.3);"
"o[1]=30.*vec3(.7,.35,.15)*mix(1.,n(T*20.+10.),.3);"
"o[2]=30.*vec3(.3,.35,.75)*mix(1.,n(T*20.+20.),.3);"
"o[3]=30.*vec3(.7,.35,.15)*mix(1.,n(T*20.+30.),.3);"
"o[4]=smoothstep(44.,50.,T)*50.*vec3(1.)*mix(1.,n(T*20.+30.),.3);"
"vec3 r=normalize(vec3(m,-1.44)),i,P=vec3(0.);"
"if(T<23.)"
"i=vec3(mix(40.,11.,T/23.),2.,0.);"
"else"
" if(T<34.)"
"{"
"float d=T-34.;"
"i=vec3(cos(d*.1)*13.,2.,sin(d*.1)*14.);"
"P=vec3(20.,0.,20.);"
"}"
"else"
" if(T<62.)"
"i=vec3(cos(T*.1)*13.,2.,sin(T*.1)*14.);"
"else"
"{"
"float b=T*2./10.48,d=floor(b);"
"i=13.*mix(vec3(n(d),n(d+4.),n(d+5.)),vec3(n(d+17.),n(d+41.),n(d+35.)),b-d);"
"}"
"float d=T*3.;"
"i+=.1*vec3(n(d),n(d+1.),n(d+3.));"
"mat3 s=a(i,P,v.rbr);"
"i+=s*vec3(m*.01,0.);"
"r=s*r;"
"vec3 b=vec3(0.);"
"const float g=40.;"
"vec3 x=K(i,r,g),l=i+x.r*r,u,t,N;"
"float p,e;"
"K(l,N,t,u,e,p);"
"b=t+K(l,-r,N,0.,u,p,e);"
"gl_FragColor=vec4(b,x.r);"
"}";

#endif // SHADER_CODE_H_
