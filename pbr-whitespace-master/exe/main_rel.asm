; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\new\Revision2017_4k\pbr-whitespace-master\src\_windows\main_rel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?lpSoundBuffer@@3PAMA				; lpSoundBuffer
PUBLIC	___fltused
PUBLIC	?fragment_glsl@@3PBDB				; fragment_glsl
PUBLIC	?out_glsl@@3PBDB				; out_glsl
PUBLIC	?post_glsl@@3PBDB				; post_glsl
_BSS	SEGMENT
?lpSoundBuffer@@3PAMA DD 0c81cc0H DUP (?)		; lpSoundBuffer
_BSS	ENDS
wavehdr	SEGMENT
?WaveHDR@@3Uwavehdr_tag@@A DD FLAT:?lpSoundBuffer@@3PAMA ; WaveHDR
	DD	03207300H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?MMTime@@3Ummtime_tag@@A DD 02H				; MMTime
	DD	00H
	ORG $+4
___fltused DD	01H
$SG48292 DB	'T', 00H
	ORG $+2
$SG48293 DB	'FB', 00H
wavehdr	ENDS
wavefmt	SEGMENT
?WaveFMT@@3UtWAVEFORMATEX@@A DW 03H			; WaveFMT
	DW	02H
	DD	0ac44H
	DD	056220H
	DW	08H
	DW	020H
	DW	00H
wavefmt	ENDS
_DATA	SEGMENT
?screenSettings@@3U_devicemodeA@@A DB 00H		; screenSettings
	ORG $+31
	DW	00H
	DW	00H
	DW	09cH
	DW	00H
	DD	01c0000H
	DW	00H
	ORG $+14
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DW	00H
	DB	00H
	ORG $+31
	DW	00H
	DD	020H
	DD	0500H
	DD	02d0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?fragment_glsl@@3PBDB DD FLAT:$SG47345			; fragment_glsl
?out_glsl@@3PBDB DD FLAT:$SG47348			; out_glsl
?post_glsl@@3PBDB DD FLAT:$SG47351			; post_glsl
_DATA	ENDS
CONST	SEGMENT
?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B DW 028H		; pfd
	DW	01H
	DD	025H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DD	00H
	DD	00H
$SG47345 DB	'#version 130', 0aH, 'uniform int m;float v=m*.0001;const'
	DB	' vec3 f=vec3(0.,.001,1.);const float s=3.14159;float x(vec2 f'
	DB	'){return fract(10000.*sin(17.*f.x+.1*f.y)*(.1+abs(sin(13.*f.y'
	DB	'+f.x))));}float n(vec3 v){return n(vec2(n(v.xy),v.z));}float '
	DB	'd(vec3 v){vec3 z=floor(v);v=v-z;v*=v*(3.-2.*v);return mix(mix'
	DB	'(mix(n(z),n(z+f.zxx),v.x),mix(n(z+f.xzx),n(z+f.zzx),v.x),v.y)'
	DB	',mix(mix(n(z+f.xxz),n(z+f.zxz),v.x),mix(n(z+f.xzz),n(z+f.zzz)'
	DB	',v.x),v.y),v.z);}float d(vec3 v,vec3 x){return v=abs(v)-x,max'
	DB	'(v.x,max(v.y,v.z));}float n(vec2 v,vec2 x){return v=abs(v)-x,'
	DB	'max(v.x,v.y);}mat3 t(float v){float m=sin(v),x=cos(v);return '
	DB	'mat3(1.,0.,0.,0.,x,-m,0.,m,x);}mat3 e(float v){float m=sin(v)'
	DB	',x=cos(v);return mat3(x,0.,m,0.,1.,0,-m,0.,x);}mat3 r(float v'
	DB	'){float m=sin(v),a=cos(v);return mat3(a,m,0.,-m,a,0.,0.,0.,1.'
	DB	');}float e(vec3 v,float x){return length(v)-x;}vec3 r(vec3 v,'
	DB	'vec3 m){return mod(v,m)-m*.5;}vec2 t(vec2 v,vec2 m){return mo'
	DB	'd(v,m)-m*.5;}float d(vec3 v,float m,float x,float z){float a='
	DB	'length(v);return max(abs(v.y)-z,max(a-x,m-a));}float K(vec2 v'
	DB	'){return max(v.x,v.y);}float i(vec3 m){m=e(v*.1)*m;const floa'
	DB	't a=2.8;const int z=2;vec3 f=vec3(1.1,.9,1.9);for(int x=0;x<z'
	DB	';++x){m=m*e(.1+v*.3);m=abs(m);m.xy+=step(m.x,m.y)*(m.yx-m.xy)'
	DB	';m.xz+=step(m.x,m.z)*(m.zx-m.xz);m.yz+=step(m.y,m.z)*(m.zy-m.'
	DB	'yz);m=m*r(.1);m.xy=m.xy*a-(a-1.)*f.xy;m.z=a*m.z;if(m.z>.5*f.z'
	DB	'*(a-1.))m.z-=f.z*(a-1.);}return n(m,vec3(1.))*pow(a,-float(z)'
	DB	');}bool z=true,y=false,c=false;int a=0;', 0aH, '#define PICK('
	DB	'd,dn,mn)if(domat){if(dn<d){d=dn;mindex=mn;}}else d=min(d,dn);'
	DB	0aH, 'float o(vec3 v){float m=K(abs(v.xy)-vec2(2.,.1));if(y)m='
	DB	'm+max(0.,.2*n(t(v.xz,vec2(.1)),vec2(.01)));v.x=abs(v.x)+.02;f'
	DB	'loat a=K(abs(v.xy-vec2(2.,1.))-vec2(.02)),x=max(abs(mod(v.z,.'
	DB	'4)-.2)-.02,max(abs(v.y-.5)-.5,abs(v.x-2.)-.02));return min(m,'
	DB	'min(a,x));}float h(vec3 v){return n(v-vec3(33.,1.6,0.),vec3(2'
	DB	'0.,1.5,1.96));}', 0aH, '#define LN 3', 0aH, 'vec3 P[3],l[3];f'
	DB	'loat p(vec3 v){float m=100000.;if(z)for(int f=0;f<LN;++f)PICK'
	DB	'(m,length(v-P[f])-.1,f+100);float x=-min(h(vec3(abs(v.x),v.yz'
	DB	')),h(vec3(abs(v.z),v.yx))),a=max(-e(v,19.),n(t(v,vec3(2.)),ve'
	DB	'c3(.8))),f=-e(v,20.);PICK(m,f,1);PICK(m,a,2);m=max(x,m);float'
	DB	' d=e(v,9.);d=max(d,abs(abs(v.y)-3.)-.5);d=min(d,n(t(v,vec3(11'
	DB	'.8)),vec3(.1,100.,.1)));d=max(d,-e(v,8.9));float r=o(vec3(len'
	DB	'gth(v.xz)-13.,v.y,atan(v.x,v.z)*10.));r=min(r,max(15.-length('
	DB	'v.xz),min(o(v.zyx),o(v))));r=max(r,x);PICK(m,d,3);PICK(m,r,4)'
	DB	';PICK(m,i(v/4.)*4.,5);return m;}vec3 w(vec3 v){float m=p(v);r'
	DB	'eturn normalize(vec3(p(v+f.yxx)-m,p(v+f.xyx)-m,p(v+f.xxy)-m))'
	DB	';}void K(vec3 m,out vec3 f,out vec3 x,out vec3 r,out float i,'
	DB	'out float z){y=true;c=true;f=w(m);x=vec3(0.,1.,1.);r=vec3(0.)'
	DB	';i=0.;z=0.;if(a==1)x=vec3(0.),r=vec3(1.),i=.5,z=.99;else if(a'
	DB	'==2){float n=sin(v+dot(normalize(vec3(1.)),floor(m/2.)));r=ma'
	DB	'x(0.,n)*vec3(1.);x=vec3(0.);i=.2;z=.99;}else if(a==3)x=vec3(0'
	DB	'.),r=vec3(1.),i=.8,z=.99;else if(a==4)x=vec3(0.),r=vec3(.56,.'
	DB	'57,.58),z=.8,i=.2,i=.2+.6*pow(d(m*4.+40.),4.);else if(a==5)x='
	DB	'vec3(0.),r=vec3(1.),i=.9,z=0.;else{for(int P=0;P<LN;++P)if(a='
	DB	'=100+P)x=l[P],r=vec3(0.),i=0.,z=0.;}c=false;y=false;}vec3 K(f'
	DB	'loat m,vec3 v){return v+(1.-v)*pow(1.-m,5.);}float K(vec3 v,v'
	DB	'ec3 m,float f){f*=f;f*=f;float x=max(dot(v,m),0.),r=x*x*(f-1.'
	DB	')+1.;r=s*r*r;return f/r;}float h(float v,float m){return m+=1'
	DB	'.,m*=m/8.,v/(v*(1.-m)+m);}float K(vec3 v,vec3 m,vec3 x,float '
	DB	'f){float a=max(dot(v,m),0.),d=max(dot(v,x),0.),r=h(a,f),z=h(d'
	DB	',f);return z*r;}vec3 e(vec3 v,vec3 m,float x,float z){float f'
	DB	'=0.,a=1000.;int r;for(r=0;r<128;++r){vec3 d=v+m*f;float i=p(d'
	DB	');f+=i*x;a=min(a,i);if(i<.002*f||f>z)break;}return vec3(f,a,f'
	DB	'loat(r));}vec3 K(vec3 v,vec3 m,vec3 a,float x,vec3 f,float z,'
	DB	'float i){vec3 r=vec3(0.);for(int y=0;y<LN;++y){vec3 d=P[y]-v;'
	DB	'float n=dot(d,d),c=sqrt(n);d=normalize(d);vec3 M=e(v+.02*d,d,'
	DB	'1.,c);if(M.y<.005||M.x<c)continue;vec3 o=normalize(m+d),p=l[y'
	DB	']/n,t=mix(vec3(.04),f,z),N=K(max(dot(o,m),0.),t);float w=K(a,'
	DB	'o,i),h=K(a,m,d,i);vec3 g=w*h*N;float V=4.*max(dot(a,m),0.)*ma'
	DB	'x(dot(a,d),0.)+.001;vec3 L=g/V,u=vec3(1.)-N;u*=1.-z;float k=m'
	DB	'ax(dot(a,d),0.);r+=(u*f/s+L)*p*k;}vec3 d=vec3(.03)*f*x;return'
	DB	' d+r;}mat3 d(vec3 v,vec3 m,vec3 f){vec3 x=normalize(v-m),a=no'
	DB	'rmalize(cross(f,x));f=cross(x,a);return mat3(a,f,x);}void mai'
	DB	'n(){vec2 v=gl_FragCoord.xy/V*2.-1.;v.x*=V.x/V.y;float m=1.;P['
	DB	'0]=10.*vec3(sin(m),1.,cos(m));P[1]=10.*vec3(sin(-m+3.),1.,cos'
	DB	'(m+3.));P[2]=12.*vec3(0.,sin(m*.7),0.);l[0]=vec3(10.);l[1]=ve'
	DB	'c3(9.,10.,5.);l[2]=vec3(14.,7.,3.);mat3 x=e(M.x*.002)*t(M.y*.'
	DB	'002);vec3 a=x*vec3(0.,0.,max(.1,M.z/10.)),r=normalize(vec3(v,'
	DB	'-1.44));mat3 i=d(a,vec3(10.,0.,0.),f.xzx);a+=i*vec3(v*.01,0.)'
	DB	';r=i*r;vec3 n=f.zxz;const float y=40.;vec3 o=e(a,r,1.,y);if(o'
	DB	'.x<y){z=false;vec3 s=a+o.x*r,c,p,N;float h,k;K(s,N,p,c,k,h);n'
	DB	'=p+K(s,-r,N,0.,c,h,k);}gl_FragColor=vec4(n,o.x);}', 00H
	ORG $+3
$SG47348 DB	'uniform sampler2D g;uniform vec2 d;uniform float v;void '
	DB	'main(){if(gl_FragCoord.y<10.){gl_FragColor=vec4(step(gl_FragC'
	DB	'oord.x/d.x,v));return;}vec2 r=gl_FragCoord.xy/d;vec3 s=textur'
	DB	'e2D(g,r).xyz;gl_FragColor=vec4(s,1.);}', 00H
	ORG $+7
$SG47351 DB	'uniform sampler2D z;uniform vec2 f;uniform float v;void '
	DB	'main(){vec2 v=gl_FragCoord.xy/f;vec4 i=texture2D(z,v);vec3 c='
	DB	'vec3(0.);float s=2.;const int w=256;const float r=2.399;mat2 '
	DB	't=mat2(cos(r),sin(r),-sin(r),cos(r));vec3 m=vec3(0.);vec4 u=v'
	DB	'ec4(i.xyz,1.);vec2 a=vec2(.002*f.y/f.x,.002),g=vec2(0.,1.1);f'
	DB	'loat p=1.;for(int e=0;e<w;e++){p+=1./p;g*=t;vec2 o=a*(p-1.)*g'
	DB	';vec4 l=texture2D(z,v+o);m+=l.xyz;if(l.w<i.w){float x=length('
	DB	'o),n=abs(l.w-s)/f.x,y=step(x,n);y=step(x*.01,y);u+=vec4(l.xyz'
	DB	',1.)*y;}}c+=pow(m/float(w),vec3(2.));c+=u.xyz/u.w;c=c/(c+1.);'
	DB	'gl_FragColor=vec4(pow(c,vec3(1./2.2)),1.);}', 00H
CONST	ENDS
PUBLIC	?entrypoint@@YGXXZ				; entrypoint
PUBLIC	__real@3a83126f
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__ChoosePixelFormat@8:PROC
EXTRN	__imp__SetPixelFormat@12:PROC
EXTRN	__imp__wglCreateContext@4:PROC
EXTRN	__imp__wglMakeCurrent@8:PROC
EXTRN	__imp__SwapBuffers@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	__imp__waveOutOpen@24:PROC
EXTRN	__imp__waveOutPrepareHeader@12:PROC
EXTRN	__imp__waveOutWrite@12:PROC
EXTRN	__imp__waveOutGetPosition@12:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	__imp__glBindTexture@8:PROC
EXTRN	__imp__glGenTextures@8:PROC
EXTRN	__imp__glRects@16:PROC
EXTRN	__imp__glTexImage2D@36:PROC
EXTRN	__imp__glTexParameteri@12:PROC
EXTRN	?EXT_Init@@YGXXZ:PROC				; EXT_Init
EXTRN	__4klang_render@4:PROC
EXTRN	?oglCreateShader@@3P6GII@ZA:DWORD		; oglCreateShader
EXTRN	?oglShaderSource@@3P6GXIHPAPBDPBH@ZA:DWORD	; oglShaderSource
EXTRN	?oglCompileShader@@3P6GXI@ZA:DWORD		; oglCompileShader
EXTRN	?oglCreateProgram@@3P6GIXZA:DWORD		; oglCreateProgram
EXTRN	?oglAttachShader@@3P6GXII@ZA:DWORD		; oglAttachShader
EXTRN	?oglLinkProgram@@3P6GXI@ZA:DWORD		; oglLinkProgram
EXTRN	?oglUseProgram@@3P6GXI@ZA:DWORD			; oglUseProgram
EXTRN	?oglGetUniformLocation@@3P6GHIPBD@ZA:DWORD	; oglGetUniformLocation
EXTRN	?oglUniform1i@@3P6GXHH@ZA:DWORD			; oglUniform1i
EXTRN	?oglUniform1f@@3P6GXHM@ZA:DWORD			; oglUniform1f
EXTRN	?oglGenFramebuffers@@3P6GXHPAI@ZA:DWORD		; oglGenFramebuffers
EXTRN	?oglBindFramebuffer@@3P6GXII@ZA:DWORD		; oglBindFramebuffer
EXTRN	?oglFramebufferTexture2D@@3P6GXIIIIH@ZA:DWORD	; oglFramebufferTexture2D
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?hWaveOut@@3PAUHWAVEOUT__@@A DD 01H DUP (?)		; hWaveOut
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\new\revision2017_4k\pbr-whitespace-master\src\_windows\main_rel.cpp
;	COMDAT ?entrypoint@@YGXXZ
_TEXT	SEGMENT
_time$1$ = -36						; size = 4
_to$1$ = -32						; size = 4
_p_out$1$ = -28						; size = 4
_fb$ = -24						; size = 12
_tex$ = -12						; size = 12
?entrypoint@@YGXXZ PROC					; entrypoint, COMDAT

; 119  : {

	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 120  : 	// initialize window
; 121  : 	#ifdef FULLSCREEN
; 122  : 	ChangeDisplaySettings(&screenSettings,CDS_FULLSCREEN);

	push	4
	push	OFFSET ?screenSettings@@3U_devicemodeA@@A
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8

; 123  : 	ShowCursor(0);

	xor	edi, edi
	push	edi
	call	DWORD PTR __imp__ShowCursor@4

; 124  : 	HDC hDC = GetDC(CreateWindow((LPCSTR)0xC018, 0, WS_POPUP | WS_VISIBLE, 0, 0, XRES, YRES, 0, 0, 0, 0));

	push	edi
	push	edi
	push	edi
	push	edi
	push	720					; 000002d0H
	push	1280					; 00000500H
	push	edi
	push	edi
	push	-1879048192				; 90000000H
	push	edi
	push	49176					; 0000c018H
	push	edi
	call	DWORD PTR __imp__CreateWindowExA@48
	push	eax
	call	DWORD PTR __imp__GetDC@4
	mov	esi, eax

; 125  : 	#else
; 126  : 	HDC hDC = GetDC(CreateWindow("static", 0, WS_POPUP | WS_VISIBLE, 0, 0, XRES, YRES, 0, 0, 0, 0));
; 127  : 	#endif	
; 128  : 
; 129  : 	// initalize opengl
; 130  : 	SetPixelFormat(hDC,ChoosePixelFormat(hDC,&pfd),&pfd);

	mov	eax, OFFSET ?pfd@@3UtagPIXELFORMATDESCRIPTOR@@B
	push	eax
	push	eax
	push	esi
	call	DWORD PTR __imp__ChoosePixelFormat@8
	push	eax
	push	esi
	call	DWORD PTR __imp__SetPixelFormat@12

; 131  : 	wglMakeCurrent(hDC,wglCreateContext(hDC));

	push	esi
	call	DWORD PTR __imp__wglCreateContext@4
	push	eax
	push	esi
	call	DWORD PTR __imp__wglMakeCurrent@8

; 132  : 	EXT_Init();

	call	?EXT_Init@@YGXXZ			; EXT_Init

; 133  : 
; 134  : 	const int p_ray = compileProgram(fragment_glsl);

	push	DWORD PTR ?fragment_glsl@@3PBDB		; fragment_glsl
	call	?compileProgram@@YGHPBD@Z		; compileProgram

; 135  : 	const int p_dof = compileProgram(post_glsl);

	push	DWORD PTR ?post_glsl@@3PBDB		; post_glsl
	mov	ebx, eax
	call	?compileProgram@@YGHPBD@Z		; compileProgram

; 136  : 	const int p_out = compileProgram(out_glsl);

	push	DWORD PTR ?out_glsl@@3PBDB		; out_glsl
	mov	ebp, eax
	call	?compileProgram@@YGHPBD@Z		; compileProgram
	mov	DWORD PTR _p_out$1$[esp+52], eax

; 137  : 
; 138  : 	GLuint tex[FbTex_COUNT], fb[FbTex_COUNT];
; 139  : 	glGenTextures(FbTex_COUNT, tex);

	lea	eax, DWORD PTR _tex$[esp+52]
	push	eax
	push	3
	call	DWORD PTR __imp__glGenTextures@8

; 140  : 	oglGenFramebuffers(FbTex_COUNT, fb);

	lea	eax, DWORD PTR _fb$[esp+52]
	push	eax
	push	3
	call	DWORD PTR ?oglGenFramebuffers@@3P6GXHPAI@ZA ; oglGenFramebuffers

; 141  : 
; 142  : 	initFbTex(tex[FbTex_Ray], fb[FbTex_Ray]);

	push	DWORD PTR _fb$[esp+56]
	push	DWORD PTR _tex$[esp+60]
	call	?initFbTex@@YGXHH@Z			; initFbTex

; 143  : 	initFbTex(tex[FbTex_Dof], fb[FbTex_Dof]);

	push	DWORD PTR _fb$[esp+60]
	push	DWORD PTR _tex$[esp+64]
	call	?initFbTex@@YGXHH@Z			; initFbTex

; 144  : // initialize sound
; 145  : 	CreateThread(0, 0, (LPTHREAD_START_ROUTINE)_4klang_render, lpSoundBuffer, 0, 0);

	push	edi
	push	edi
	push	OFFSET ?lpSoundBuffer@@3PAMA		; lpSoundBuffer
	push	OFFSET __4klang_render@4
	push	edi
	push	edi
	call	DWORD PTR __imp__CreateThread@24

; 146  : 	waveOutOpen(&hWaveOut, WAVE_MAPPER, &WaveFMT, NULL, 0, CALLBACK_NULL);

	push	edi
	push	edi
	push	edi
	push	OFFSET ?WaveFMT@@3UtWAVEFORMATEX@@A
	push	-1
	push	OFFSET ?hWaveOut@@3PAUHWAVEOUT__@@A
	call	DWORD PTR __imp__waveOutOpen@24

; 147  : 	waveOutPrepareHeader(hWaveOut, &WaveHDR, sizeof(WaveHDR));

	push	32					; 00000020H
	mov	edi, OFFSET ?WaveHDR@@3Uwavehdr_tag@@A
	push	edi
	push	DWORD PTR ?hWaveOut@@3PAUHWAVEOUT__@@A
	call	DWORD PTR __imp__waveOutPrepareHeader@12

; 148  : 	waveOutWrite(hWaveOut, &WaveHDR, sizeof(WaveHDR));

	push	32					; 00000020H
	push	edi
	push	DWORD PTR ?hWaveOut@@3PAUHWAVEOUT__@@A
	call	DWORD PTR __imp__waveOutWrite@12

; 149  : 	const int to = timeGetTime();

	mov	edi, DWORD PTR __imp__timeGetTime@0
	call	edi
	mov	DWORD PTR _to$1$[esp+52], eax
$LL4@entrypoint:

; 150  : 	
; 151  : 	// play intro
; 152  : 	do 
; 153  : 	{
; 154  : 		waveOutGetPosition(hWaveOut, &MMTime, sizeof(MMTIME));

	push	12					; 0000000cH
	push	OFFSET ?MMTime@@3Ummtime_tag@@A
	push	DWORD PTR ?hWaveOut@@3PAUHWAVEOUT__@@A
	call	DWORD PTR __imp__waveOutGetPosition@12

; 155  : 		const float time = (timeGetTime() - to) * 1e-3f;

	call	edi
	sub	eax, DWORD PTR _to$1$[esp+52]

; 156  : 		paint(p_ray, 0, fb[FbTex_Ray], time);

	push	ecx
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	cvtpd2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _fb$[esp+60]
	movss	DWORD PTR _time$1$[esp+60], xmm0
	push	0
	push	ebx
	call	?paint@@YGXHHHM@Z			; paint

; 157  : 		paint(p_dof, tex[FbTex_Ray], fb[FbTex_Dof], time);

	movss	xmm0, DWORD PTR _time$1$[esp+52]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _fb$[esp+64]
	push	DWORD PTR _tex$[esp+64]
	push	ebp
	call	?paint@@YGXHHHM@Z			; paint

; 158  : 		paint(p_out, tex[FbTex_Dof], 0, time);

	movss	xmm0, DWORD PTR _time$1$[esp+52]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	DWORD PTR _tex$[esp+68]
	push	DWORD PTR _p_out$1$[esp+64]
	call	?paint@@YGXHHHM@Z			; paint

; 159  : 		SwapBuffers(hDC);

	push	esi
	call	DWORD PTR __imp__SwapBuffers@4

; 160  : 	} while(!GetAsyncKeyState(VK_ESCAPE) && MMTime.u.sample < 5990000);

	push	27					; 0000001bH
	call	DWORD PTR __imp__GetAsyncKeyState@4
	test	ax, ax
	jne	SHORT $LN5@entrypoint
	cmp	DWORD PTR ?MMTime@@3Ummtime_tag@@A+4, 5990000 ; 005b6670H
	jb	$LL4@entrypoint
$LN5@entrypoint:

; 161  : 
; 162  : 	#ifdef CLEANDESTROY
; 163  : 	sndPlaySound(0,0);
; 164  : 	ChangeDisplaySettings( 0, 0 );
; 165  : 	ShowCursor(1);
; 166  : 	#endif
; 167  : 
; 168  : 	ExitProcess(0);

	push	0
	call	DWORD PTR __imp__ExitProcess@4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN11@entrypoint:
$LN10@entrypoint:
?entrypoint@@YGXXZ ENDP					; entrypoint
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\new\revision2017_4k\pbr-whitespace-master\src\_windows\main_rel.cpp
;	COMDAT ?paint@@YGXHHHM@Z
_TEXT	SEGMENT
_prog$ = 8						; size = 4
_src_tex$ = 12						; size = 4
_dst_fb$ = 16						; size = 4
_time$ = 20						; size = 4
?paint@@YGXHHHM@Z PROC					; paint, COMDAT

; 104  : static void paint(int prog, int src_tex, int dst_fb, float time) {

	push	ebp
	mov	ebp, esp

; 105  : 	oglUseProgram(prog);

	push	DWORD PTR _prog$[ebp]
	call	DWORD PTR ?oglUseProgram@@3P6GXI@ZA	; oglUseProgram

; 106  : 	glBindTexture(GL_TEXTURE_2D, src_tex);

	push	DWORD PTR _src_tex$[ebp]
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glBindTexture@8

; 107  : 	oglBindFramebuffer(GL_FRAMEBUFFER, dst_fb);

	push	DWORD PTR _dst_fb$[ebp]
	push	36160					; 00008d40H
	call	DWORD PTR ?oglBindFramebuffer@@3P6GXII@ZA ; oglBindFramebuffer

; 108  : 	oglUniform1f(oglGetUniformLocation(prog, "T"), time);

	movss	xmm0, DWORD PTR _time$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	OFFSET $SG48292
	push	DWORD PTR _prog$[ebp]
	call	DWORD PTR ?oglGetUniformLocation@@3P6GHIPBD@ZA ; oglGetUniformLocation
	push	eax
	call	DWORD PTR ?oglUniform1f@@3P6GXHM@ZA	; oglUniform1f

; 109  : 	oglUniform1i(oglGetUniformLocation(prog, "FB"), 0);

	push	0
	push	OFFSET $SG48293
	push	DWORD PTR _prog$[ebp]
	call	DWORD PTR ?oglGetUniformLocation@@3P6GHIPBD@ZA ; oglGetUniformLocation
	push	eax
	call	DWORD PTR ?oglUniform1i@@3P6GXHH@ZA	; oglUniform1i

; 110  : 	glRects(-1, -1, 1, 1);

	push	1
	push	1
	push	-1
	push	-1
	call	DWORD PTR __imp__glRects@16

; 111  : }

	pop	ebp
	ret	16					; 00000010H
?paint@@YGXHHHM@Z ENDP					; paint
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\new\revision2017_4k\pbr-whitespace-master\src\_windows\main_rel.cpp
;	COMDAT ?initFbTex@@YGXHH@Z
_TEXT	SEGMENT
_fb$ = 8						; size = 4
_tex$ = 12						; size = 4
?initFbTex@@YGXHH@Z PROC				; initFbTex, COMDAT

; 93   : static void initFbTex(int fb, int tex) {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 94   : 	glBindTexture(GL_TEXTURE_2D, tex);

	push	DWORD PTR _tex$[esp+12]
	mov	ebp, 3553				; 00000de1H
	push	ebp
	call	DWORD PTR __imp__glBindTexture@8

; 95   : 	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA16F, XRES, YRES, 0, GL_RGBA, GL_FLOAT, 0);

	xor	ebx, ebx
	push	ebx
	push	5126					; 00001406H
	push	6408					; 00001908H
	push	ebx
	push	720					; 000002d0H
	push	1280					; 00000500H
	push	34842					; 0000881aH
	push	ebx
	push	ebp
	call	DWORD PTR __imp__glTexImage2D@36

; 96   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);

	mov	esi, DWORD PTR __imp__glTexParameteri@12
	mov	edi, 9729				; 00002601H
	push	edi
	push	10241					; 00002801H
	push	ebp
	call	esi

; 97   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

	push	edi
	push	10240					; 00002800H
	push	ebp
	call	esi

; 98   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_BORDER);

	mov	edi, 33069				; 0000812dH
	push	edi
	push	10242					; 00002802H
	push	ebp
	call	esi

; 99   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_BORDER);

	push	edi
	push	10243					; 00002803H
	push	ebp
	call	esi

; 100  : 	oglBindFramebuffer(GL_FRAMEBUFFER, fb);

	push	DWORD PTR _fb$[esp+12]
	mov	esi, 36160				; 00008d40H
	push	esi
	call	DWORD PTR ?oglBindFramebuffer@@3P6GXII@ZA ; oglBindFramebuffer

; 101  : 	oglFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, tex, 0);

	push	ebx
	push	DWORD PTR _tex$[esp+16]
	push	ebp
	push	36064					; 00008ce0H
	push	esi
	call	DWORD PTR ?oglFramebufferTexture2D@@3P6GXIIIIH@ZA ; oglFramebufferTexture2D
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 102  : }

	ret	8
?initFbTex@@YGXHH@Z ENDP				; initFbTex
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\new\revision2017_4k\pbr-whitespace-master\src\_windows\main_rel.cpp
;	COMDAT ?compileProgram@@YGHPBD@Z
_TEXT	SEGMENT
_fragment$ = 8						; size = 4
?compileProgram@@YGHPBD@Z PROC				; compileProgram, COMDAT

; 68   : static int compileProgram(const char *fragment) {

	push	esi
	push	edi

; 69   : 	const int pid = oglCreateProgram();

	call	DWORD PTR ?oglCreateProgram@@3P6GIXZA	; oglCreateProgram

; 70   : 	const int fsId = oglCreateShader(GL_FRAGMENT_SHADER);

	push	35632					; 00008b30H
	mov	edi, eax
	call	DWORD PTR ?oglCreateShader@@3P6GII@ZA	; oglCreateShader
	mov	esi, eax

; 71   : 	oglShaderSource(fsId, 1, &fragment, 0);

	lea	eax, DWORD PTR _fragment$[esp+4]
	push	0
	push	eax
	push	1
	push	esi
	call	DWORD PTR ?oglShaderSource@@3P6GXIHPAPBDPBH@ZA ; oglShaderSource

; 72   : 	oglCompileShader(fsId);

	push	esi
	call	DWORD PTR ?oglCompileShader@@3P6GXI@ZA	; oglCompileShader

; 73   : 
; 74   : #ifdef SHADER_DEBUG
; 75   : 	int result;
; 76   : 	char info[2048];
; 77   : #define oglGetObjectParameteriv ((PFNGLGETOBJECTPARAMETERIVARBPROC) wglGetProcAddress("glGetObjectParameterivARB"))
; 78   : #define oglGetInfoLog ((PFNGLGETINFOLOGARBPROC) wglGetProcAddress("glGetInfoLogARB"))
; 79   : 	oglGetObjectParameteriv(fsId, GL_OBJECT_COMPILE_STATUS_ARB, &result);
; 80   : 	oglGetInfoLog(fsId, 2047, NULL, (char*)info);
; 81   : 	if (!result)
; 82   : 	{
; 83   : 		MessageBox(NULL, info, "", 0x00000000L);
; 84   : 		ExitProcess(0);
; 85   : 	}
; 86   : #endif
; 87   : 
; 88   : 	oglAttachShader(pid, fsId);

	push	esi
	push	edi
	call	DWORD PTR ?oglAttachShader@@3P6GXII@ZA	; oglAttachShader

; 89   : 	oglLinkProgram(pid);

	push	edi
	call	DWORD PTR ?oglLinkProgram@@3P6GXI@ZA	; oglLinkProgram

; 90   : 	return pid;

	mov	eax, edi
	pop	edi
	pop	esi

; 91   : }

	ret	4
?compileProgram@@YGHPBD@Z ENDP				; compileProgram
_TEXT	ENDS
END
